Creating Documents
The _id field
Reading Documents
Comparison Operators
Logical Operators
Element Operators
Regex Operators
Array Operators
Updating Documents


https://docs.mongodb.com/manual/reference/mongo-shell/
insertOne with id
insertOne without id
insertMany

show duplicate insert error

db.collection.drop();

ordered : false/true - insert once dont fail -- insert others

update command - upserts means insert when update query doesnt find a match for update

_id -- primary key
mongo db create _id -
each collection has primary index on _id

ObjectId
Date|Mac_Addr|PID|Counter
----|---|--|---
12 bytes

Reading Documents
	scalars
	embeded docs
	array

mongorestore dump
db.movieDetails.find({"rated" : "PG-13"}).count();

searching embeded doc value
	use dot notation

db.movieDetails.find({"tomato.meter" : "100"}).count();

nested document are searched using same number of .s 

equality matches on array
 - on entire array
 -- order of element maters
	db.movieDetails.find({"actors" : ["Jeff Bridges"]});
 
 - matches atleast one element in array
	db.movieDetails.find({"actors" : "Jeff Bridges"});
	
 - match specific element 
	db.movieDetails.find({"actors.0" : "Jeff Bridges"});
	
cursors
projections
	reduce size of response
	

db.movieDetails.find({"actors" : ["Jeff Bridges"]}, { "title":1, "_id":0});
 
https://docs.mongodb.com/manual/reference/operator/query/

 
score gt equal to 65 exam sort and which has lowest score
db.grades.find({"type":"exam", "score": {$gte:65}})
db.grades.find( { score : { $gte : 65 } } ).sort( { score : 1 } )

comaparators
Comparison Operators
Element Operators
$exists
$type

Logical Operators
$or
$and
$nor

db.movieDetails.find({ boxOffice: { country: "UK", revenue: { $gt: 15 } } })
db.movieDetails.find({ "boxOffice.country": "UK", "boxOffice.revenue": { $gt: 15 } } )

updateOne