Schema Design
RDMS - 3NF

1. Rich Document
2. Pre Joined data for faster access / Embeded Data
3. No Joins
4. No Constraints
5. Atomic Operations
6. No Transactions
7. No Declared Schema
8. Similar structure


Develop schema which suits application access pattern

mongodb support rich data patterns

Data Modeling
RDBMS
	posts
	authors
	comments
	post_comments
	tags
	posts_tags

MongoDB
	posts
		comments
		tags
		author
	authors

6 tables vs 2 collections



Embeded example
book = {
    title: "MongoDB: The Definitive Guide",
    authors: [ "Kristina Chodorow", "Mike Dirolf" ]
    published_date: ISODate("2010-09-24"),
    pages: 216,
    language: "English",
    publisher: {
        name: "O’Reilly Media",
        founded: "1980",
        location: "CA"
    }
}

Linked Example
publisher = {
    _id: "oreilly",
    name: "O’Reilly Media",
    founded: "1980",
    location: "CA"
}
book = {
    title: "MongoDB: The Definitive Guide",
    authors: [ "Kristina Chodorow", "Mike Dirolf" ]
    published_date: ISODate("2010-09-24"),
    pages: 216,
    language: "English",
    publisher_id: "oreilly"
}


MongoDB
	Embed or Not
		Access same time by the application
		Its existance is dependant on the parent existance
		MongoDB cannot be more than 16MB, so if document gets greater than 16MB move to different collection


improved read, less db hits


zip = {
 _id: 35004,
city: “ACMAR”,
 loc: [-86, 33],
pop: 6065,
State: “AL”
}

person = {
zip_id = 35004,
name: “John Doe",
address: “123 Fake St.”,
Phone: 123456
}

zip = {
 _id: 35004 ,
city: “ACMAR”
 loc: [-86, 33],
 pop: 6065,
 State: “AL”,

 person: {
 name: “John Doe",
 address: “123 Fake St.”,
 Phone: 123456
}
}

book = {
    title: "MongoDB: The Definitive Guide",
    authors : [
        { _id: "kchodorow", name: "Kristina Chodorow” }, 
        { _id: "mdirolf", name: "Mike Dirolf” }
    ]
    published_date: ISODate("2010-09-24"),
    pages: 216,
    language: "English"
}

author = { 
    _id: "kchodorow",
    name: "Kristina Chodorow",
    hometown: "New York"
}

db.books.find( { authors.name : "Kristina Chodorow" } )

mongorestrore dump
mongoimport --drop -d blog -c posts posts.json
